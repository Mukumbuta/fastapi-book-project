name: CI/CD Pipeline for FastAPI Application

on:
  push:
    branches:
      - main # Trigger on push to the main branch
  pull_request:
    branches:
      - main # Trigger on PRs to the main branch

jobs:
  # Job 1: Test
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Test SSH Connection
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            echo "SSH Connection Successful!"

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12  # Project Python version

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          pytest  # Run your tests, adjust if needed for your test framework

  # Job 2: Deploy to server
  deploy:
    runs-on: ubuntu-latest
    needs: test  # Deploy only runs after the tests are successful
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

#      - name: Set up SSH
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.EC2_HOST }}  # Server public IP or DNS
#          username: ${{ secrets.EC2_USER }}  # Server user
#          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}  # SSH private key stored in GitHub secrets
#
#      - name: Pull latest code and restart app on EC2
#        run: |
#          ssh -i ${{ secrets.EC2_SSH_PRIVATE_KEY }} ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
#            cd /home/ubuntu/HNGProjects/fastapi-book-project
#            git pull origin main
#            docker-compose down
#            docker-compose up -d
#          EOF

      - name: Set up SSH key for EC2 access
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Pull latest code and restart app on EC2
        run: |
          # Allow git to work with the directory safely
          ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            git config --global --add safe.directory /home/ubuntu/HNGProjects/fastapi-book-project
            cd /home/ubuntu/HNGProjects/fastapi-book-project
            git pull origin main
          EOF
