name: CI Pipeline for FastAPI Application

on:
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - main  # Run tests only on PRs targeting main

# This job runs tests when a PR is opened or updated
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Test SSH Connection
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            echo "SSH Connection Successful!"

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          pytest tests/ --exitfirst --disable-warnings

  automerge:
    runs-on: ubuntu-latest
    needs: test  # Ensures automerge only runs if 'tests' job passes
    if: success() # Only runs if all previous jobs (tests) succeed
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Add "automerge" Label
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: automerge

      - id: automerge
        name: Automerge PR
        uses: "pascalgn/automerge-action@v0.16.4"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          merge-method: merge  # Options: 'merge', 'squash', 'rebase'
          labels: "automerge"  # Ensures PR has this label before merging
          required-status-checks: "test"  # Ensures 'tests' job passed before merging

  deploy:
    runs-on: ubuntu-latest
    needs: automerge  # âœ… Ensures it runs only after PR is merged
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up SSH key for EC2 access
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Pull latest code and restart app on EC2
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd /home/ubuntu/HNGProjects/fastapi-book-project
            git config --global --add safe.directory /home/ubuntu/HNGProjects/fastapi-book-project
            git pull origin main
            docker-compose down
            docker-compose up -d --build
          EOF
